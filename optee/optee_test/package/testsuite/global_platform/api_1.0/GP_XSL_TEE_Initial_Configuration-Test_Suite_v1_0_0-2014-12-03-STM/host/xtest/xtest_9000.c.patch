--- xtest_9000.c.orig	2016-02-19 13:45:59.642478772 +0100
+++ xtest_9000.c	2016-02-19 14:24:51.925965024 +0100
@@ -959,8 +959,11 @@
     ADBG_EXPECT(c, TEEC_SUCCESS, TEEC_OpenSession(CONTEXT01, SESSION01, &UUID_TTA_testingInternalAPI_crypto, TEEC_LOGIN_PUBLIC, NULL, NULL, NULL));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_InitObjectWithKeys(c, SESSION01, CMD_InitObjectWithKeys, TEE_TYPE_HMAC_SHA256, SIZE_HMAC_SHA256_512, TEE_ATTR_SECRET_VALUE, TEE_ATTR_HMAC_SHA256_512_VALUE01, sizeof(TEE_ATTR_HMAC_SHA256_512_VALUE01), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), OBJECT_HANDLE_02));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AllocateOperation(c, SESSION01, CMD_AllocateOperation, TEE_ALG_HMAC_SHA256, TEE_MODE_MAC, SIZE_HMAC_SHA256_512, SIZE_ZERO, OPERATION_HANDLE_01));
+    ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_GetOperationInfoMultiple(c, SESSION01, CMD_GetOperationInfoMultiple, OPERATION_HANDLE_01, TEE_ALG_HMAC_SHA256, TEE_OPERATION_MAC, TEE_MODE_MAC, SIZE_ZERO, SIZE_HMAC_SHA256_512, SIZE_ZERO, SIZE_ZERO, TEE_USAGE_MAC, 1, false, false, false));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_SetOperationKey(c, SESSION01, CMD_SetOperationKey, OPERATION_HANDLE_01, OBJECT_HANDLE_02));
+    ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_GetOperationInfoMultiple(c, SESSION01, CMD_GetOperationInfoMultiple, OPERATION_HANDLE_01, TEE_ALG_HMAC_SHA256, TEE_OPERATION_MAC, TEE_MODE_MAC, SIZE_ZERO, SIZE_HMAC_SHA256_512, SIZE_ZERO, SIZE_HMAC_SHA256_512, TEE_USAGE_MAC, 1, false, true, false));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_MACInit(c, SESSION01, CMD_MACInit, OPERATION_HANDLE_01, NULL, IV_LENGTH_NULL));
+    ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_GetOperationInfoMultiple(c, SESSION01, CMD_GetOperationInfoMultiple, OPERATION_HANDLE_01, TEE_ALG_HMAC_SHA256, TEE_OPERATION_MAC, TEE_MODE_MAC, SIZE_ZERO, SIZE_HMAC_SHA256_512, SIZE_ZERO, SIZE_HMAC_SHA256_512, TEE_USAGE_MAC, 1, false, true, true));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_MACUpdate(c, SESSION01, CMD_MACUpdate, OPERATION_HANDLE_01, DATA_FOR_CRYPTO1_PART1, LENGTH_DATA_FOR_CRYPTO1_PART1));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_ResetOperation(c, SESSION01, CMD_ResetOperation, OPERATION_HANDLE_01));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_GetOperationInfo(c, SESSION01, CMD_GetOperationInfo, OPERATION_HANDLE_01, TEE_ALG_HMAC_SHA256, TEE_OPERATION_MAC, TEE_MODE_MAC, SIZE_ZERO, SIZE_HMAC_SHA256_512, SIZE_ZERO, SIZE_HMAC_SHA256_512, TEE_USAGE_MAC, false, true, false));
@@ -2149,7 +2152,8 @@
     ADBG_EXPECT(c, TEEC_SUCCESS, TEEC_InitializeContext(_device, CONTEXT01));
     ADBG_EXPECT(c, TEEC_SUCCESS, TEEC_OpenSession(CONTEXT01, SESSION01, &UUID_TTA_testingInternalAPI_crypto, TEEC_LOGIN_PUBLIC, NULL, NULL, NULL));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AllocateOperation(c, SESSION01, CMD_AllocateOperation, TEE_ALG_MD5, TEE_MODE_DIGEST, SIZE_ZERO, SIZE_ZERO, OPERATION_HANDLE_02));
-    ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_GetOperationInfo(c, SESSION01, CMD_GetOperationInfo, OPERATION_HANDLE_02, TEE_ALG_MD5, TEE_OPERATION_DIGEST, TEE_MODE_DIGEST, SIZE_ZERO, SIZE_ZERO, SIZE_ZERO, SIZE_ZERO, TEE_USAGE_NONE, false, true, false));
+    ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_GetOperationInfo(c, SESSION01, CMD_GetOperationInfo, OPERATION_HANDLE_02, TEE_ALG_MD5, TEE_OPERATION_DIGEST, TEE_MODE_DIGEST, SIZE_ZERO, SIZE_ZERO, SIZE_ZERO, SIZE_ZERO, TEE_USAGE_NONE, false, true, true));
+    ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_GetOperationInfoMultiple(c, SESSION01, CMD_GetOperationInfoMultiple, OPERATION_HANDLE_02, TEE_ALG_MD5, TEE_OPERATION_DIGEST, TEE_MODE_DIGEST, SIZE_ZERO, SIZE_ZERO, SIZE_ZERO, SIZE_ZERO, TEE_USAGE_NONE, 0, false, true, true));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_FreeAllKeysAndOperations(c, SESSION01, CMD_FreeAllKeysAndOperations, OPERATION_HANDLE_02));
     TEEC_CloseSession(SESSION01);
     TEEC_FinalizeContext(CONTEXT01);
@@ -2627,7 +2631,7 @@
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_SetOperationKey(c, SESSION01, CMD_SetOperationKey, OPERATION_HANDLE_01, OBJECT_HANDLE_02));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AsymmetricEncrypt(c, SESSION01, CMD_AsymmetricEncrypt, OPERATION_HANDLE_01, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_NORMAL));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AllocateOperation(c, SESSION01, CMD_AllocateOperation, TEE_ALG_MD5, TEE_MODE_DIGEST, SIZE_ZERO, SIZE_ZERO, OPERATION_HANDLE_02));
-    ADBG_EXPECT(c, TEE_ERROR_TARGET_DEAD, Invoke_Crypto_AsymmetricDecrypt(c, SESSION01, CMD_AsymmetricDecrypt, OPERATION_HANDLE_02, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_NORMAL));
+    ADBG_EXPECT(c, TEE_ERROR_TARGET_DEAD, Invoke_Crypto_AsymmetricDecrypt(c, SESSION01, CMD_AsymmetricDecrypt, OPERATION_HANDLE_02, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_NORMAL, 1));
     TEEC_CloseSession(SESSION01);
     TEEC_FinalizeContext(CONTEXT01);
 
@@ -2648,7 +2652,7 @@
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_InitObjectWithKeys(c, SESSION01, CMD_InitObjectWithKeys, TEE_TYPE_RSA_KEYPAIR, SIZE_RSA_KEYPAIR_2048, TEE_ATTR_RSA_MODULUS, TEE_ATTR_RSA_MODULUS_VALUE01, sizeof(TEE_ATTR_RSA_MODULUS_VALUE01), TEE_ATTR_RSA_PUBLIC_EXPONENT, TEE_ATTR_RSA_PUBLIC_EXPONENT_VALUE01, sizeof(TEE_ATTR_RSA_PUBLIC_EXPONENT_VALUE01), TEE_ATTR_RSA_PRIVATE_EXPONENT, TEE_ATTR_RSA_PRIVATE_EXPONENT_VALUE01, sizeof(TEE_ATTR_RSA_PRIVATE_EXPONENT_VALUE01), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), OBJECT_HANDLE_01));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AllocateOperation(c, SESSION01, CMD_AllocateOperation, TEE_ALG_RSA_NOPAD, TEE_MODE_DECRYPT, SIZE_RSA_KEYPAIR_2048, SIZE_ZERO, OPERATION_HANDLE_01));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_SetOperationKey(c, SESSION01, CMD_SetOperationKey, OPERATION_HANDLE_01, OBJECT_HANDLE_01));
-    ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AsymmetricDecrypt(c, SESSION01, CMD_AsymmetricDecrypt, OPERATION_HANDLE_01, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_NORMAL));
+    ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AsymmetricDecrypt(c, SESSION01, CMD_AsymmetricDecrypt, OPERATION_HANDLE_01, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_NORMAL, 1));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_FreeAllKeysAndOperations(c, SESSION01, CMD_FreeAllKeysAndOperations, OPERATION_HANDLE_01));
     TEEC_CloseSession(SESSION01);
     TEEC_FinalizeContext(CONTEXT01);
@@ -2670,7 +2674,7 @@
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_InitObjectWithKeys(c, SESSION01, CMD_InitObjectWithKeys, TEE_TYPE_RSA_KEYPAIR, SIZE_RSA_KEYPAIR_2048, TEE_ATTR_RSA_MODULUS, TEE_ATTR_RSA_MODULUS_VALUE01, sizeof(TEE_ATTR_RSA_MODULUS_VALUE01), TEE_ATTR_RSA_PUBLIC_EXPONENT, TEE_ATTR_RSA_PUBLIC_EXPONENT_VALUE01, sizeof(TEE_ATTR_RSA_PUBLIC_EXPONENT_VALUE01), TEE_ATTR_RSA_PRIVATE_EXPONENT, TEE_ATTR_RSA_PRIVATE_EXPONENT_VALUE01, sizeof(TEE_ATTR_RSA_PRIVATE_EXPONENT_VALUE01), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), OBJECT_HANDLE_01));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AllocateOperation(c, SESSION01, CMD_AllocateOperation, TEE_ALG_RSA_NOPAD, TEE_MODE_DECRYPT, SIZE_RSA_KEYPAIR_2048, SIZE_ZERO, OPERATION_HANDLE_01));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_SetOperationKey(c, SESSION01, CMD_SetOperationKey, OPERATION_HANDLE_01, OBJECT_HANDLE_01));
-    ADBG_EXPECT(c, TEE_ERROR_TOO_SHORT_BUFFER, Invoke_Crypto_AsymmetricDecrypt(c, SESSION01, CMD_AsymmetricDecrypt, OPERATION_HANDLE_01, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_TOO_SHORT));
+    ADBG_EXPECT(c, TEE_ERROR_TOO_SHORT_BUFFER, Invoke_Crypto_AsymmetricDecrypt(c, SESSION01, CMD_AsymmetricDecrypt, OPERATION_HANDLE_01, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_TOO_SHORT, 1));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_FreeAllKeysAndOperations(c, SESSION01, CMD_FreeAllKeysAndOperations, OPERATION_HANDLE_02));
     TEEC_CloseSession(SESSION01);
     TEEC_FinalizeContext(CONTEXT01);
@@ -2689,7 +2693,7 @@
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AllocateOperation(c, SESSION01, CMD_AllocateOperation, TEE_ALG_RSA_NOPAD, TEE_MODE_ENCRYPT, SIZE_RSA_KEYPAIR_2048, SIZE_ZERO, OPERATION_HANDLE_01));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_SetOperationKey(c, SESSION01, CMD_SetOperationKey, OPERATION_HANDLE_01, OBJECT_HANDLE_02));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AsymmetricEncrypt(c, SESSION01, CMD_AsymmetricEncrypt, OPERATION_HANDLE_01, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_NORMAL));
-    ADBG_EXPECT(c, TEE_ERROR_TARGET_DEAD, Invoke_Crypto_AsymmetricDecrypt(c, SESSION01, CMD_AsymmetricDecrypt, OPERATION_HANDLE_INVALID, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_NORMAL));
+    ADBG_EXPECT(c, TEE_ERROR_TARGET_DEAD, Invoke_Crypto_AsymmetricDecrypt(c, SESSION01, CMD_AsymmetricDecrypt, OPERATION_HANDLE_INVALID, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_NORMAL, 1));
     TEEC_CloseSession(SESSION01);
     TEEC_FinalizeContext(CONTEXT01);
 
@@ -3467,7 +3471,7 @@
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_InitObjectWithKeys(c, SESSION01, CMD_InitObjectWithKeys, TEE_TYPE_RSA_KEYPAIR, SIZE_RSA_KEYPAIR_2048, TEE_ATTR_RSA_MODULUS, TEE_ATTR_RSA_MODULUS_VALUE01, sizeof(TEE_ATTR_RSA_MODULUS_VALUE01), TEE_ATTR_RSA_PUBLIC_EXPONENT, TEE_ATTR_RSA_PUBLIC_EXPONENT_VALUE01, sizeof(TEE_ATTR_RSA_PUBLIC_EXPONENT_VALUE01), TEE_ATTR_RSA_PRIVATE_EXPONENT, TEE_ATTR_RSA_PRIVATE_EXPONENT_VALUE01, sizeof(TEE_ATTR_RSA_PRIVATE_EXPONENT_VALUE01), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), OBJECT_HANDLE_02));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AllocateOperation(c, SESSION01, CMD_AllocateOperation, TEE_ALG_RSAES_PKCS1_OAEP_MGF1_SHA224, TEE_MODE_DECRYPT, SIZE_RSA_KEYPAIR_2048, SIZE_ZERO, OPERATION_HANDLE_01));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_SetOperationKey(c, SESSION01, CMD_SetOperationKey, OPERATION_HANDLE_01, OBJECT_HANDLE_02));
-    ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AsymmetricDecrypt(c, SESSION01, CMD_AsymmetricDecrypt, OPERATION_HANDLE_01, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_NORMAL));
+    ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AsymmetricDecrypt(c, SESSION01, CMD_AsymmetricDecrypt, OPERATION_HANDLE_01, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_NORMAL, 0));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_FreeAllKeysAndOperations(c, SESSION01, CMD_FreeAllKeysAndOperations, OPERATION_HANDLE_01));
     TEEC_CloseSession(SESSION01);
     TEEC_FinalizeContext(CONTEXT01);
@@ -3489,7 +3493,7 @@
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_InitObjectWithKeys(c, SESSION01, CMD_InitObjectWithKeys, TEE_TYPE_RSA_KEYPAIR, SIZE_RSA_KEYPAIR_2048, TEE_ATTR_RSA_MODULUS, TEE_ATTR_RSA_MODULUS_VALUE01, sizeof(TEE_ATTR_RSA_MODULUS_VALUE01), TEE_ATTR_RSA_PUBLIC_EXPONENT, TEE_ATTR_RSA_PUBLIC_EXPONENT_VALUE01, sizeof(TEE_ATTR_RSA_PUBLIC_EXPONENT_VALUE01), TEE_ATTR_RSA_PRIVATE_EXPONENT, TEE_ATTR_RSA_PRIVATE_EXPONENT_VALUE01, sizeof(TEE_ATTR_RSA_PRIVATE_EXPONENT_VALUE01), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), OBJECT_HANDLE_01));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AllocateOperation(c, SESSION01, CMD_AllocateOperation, TEE_ALG_RSAES_PKCS1_OAEP_MGF1_SHA256, TEE_MODE_DECRYPT, SIZE_RSA_KEYPAIR_2048, SIZE_ZERO, OPERATION_HANDLE_02));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_SetOperationKey(c, SESSION01, CMD_SetOperationKey, OPERATION_HANDLE_02, OBJECT_HANDLE_01));
-    ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AsymmetricDecrypt(c, SESSION01, CMD_AsymmetricDecrypt, OPERATION_HANDLE_02, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_NORMAL));
+    ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AsymmetricDecrypt(c, SESSION01, CMD_AsymmetricDecrypt, OPERATION_HANDLE_02, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_NORMAL, 0));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_FreeAllKeysAndOperations(c, SESSION01, CMD_FreeAllKeysAndOperations, OPERATION_HANDLE_02));
     TEEC_CloseSession(SESSION01);
     TEEC_FinalizeContext(CONTEXT01);
@@ -3511,7 +3515,7 @@
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_InitObjectWithKeys(c, SESSION01, CMD_InitObjectWithKeys, TEE_TYPE_RSA_KEYPAIR, SIZE_RSA_KEYPAIR_2048, TEE_ATTR_RSA_MODULUS, TEE_ATTR_RSA_MODULUS_VALUE01, sizeof(TEE_ATTR_RSA_MODULUS_VALUE01), TEE_ATTR_RSA_PUBLIC_EXPONENT, TEE_ATTR_RSA_PUBLIC_EXPONENT_VALUE01, sizeof(TEE_ATTR_RSA_PUBLIC_EXPONENT_VALUE01), TEE_ATTR_RSA_PRIVATE_EXPONENT, TEE_ATTR_RSA_PRIVATE_EXPONENT_VALUE01, sizeof(TEE_ATTR_RSA_PRIVATE_EXPONENT_VALUE01), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), OBJECT_HANDLE_01));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AllocateOperation(c, SESSION01, CMD_AllocateOperation, TEE_ALG_RSAES_PKCS1_OAEP_MGF1_SHA384, TEE_MODE_DECRYPT, SIZE_RSA_KEYPAIR_2048, SIZE_ZERO, OPERATION_HANDLE_01));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_SetOperationKey(c, SESSION01, CMD_SetOperationKey, OPERATION_HANDLE_01, OBJECT_HANDLE_01));
-    ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AsymmetricDecrypt(c, SESSION01, CMD_AsymmetricDecrypt, OPERATION_HANDLE_01, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_NORMAL));
+    ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AsymmetricDecrypt(c, SESSION01, CMD_AsymmetricDecrypt, OPERATION_HANDLE_01, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_NORMAL, 0));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_FreeAllKeysAndOperations(c, SESSION01, CMD_FreeAllKeysAndOperations, OPERATION_HANDLE_01));
     TEEC_CloseSession(SESSION01);
     TEEC_FinalizeContext(CONTEXT01);
@@ -3533,7 +3537,7 @@
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_InitObjectWithKeys(c, SESSION01, CMD_InitObjectWithKeys, TEE_TYPE_RSA_KEYPAIR, SIZE_RSA_KEYPAIR_2048, TEE_ATTR_RSA_MODULUS, TEE_ATTR_RSA_MODULUS_VALUE01, sizeof(TEE_ATTR_RSA_MODULUS_VALUE01), TEE_ATTR_RSA_PUBLIC_EXPONENT, TEE_ATTR_RSA_PUBLIC_EXPONENT_VALUE01, sizeof(TEE_ATTR_RSA_PUBLIC_EXPONENT_VALUE01), TEE_ATTR_RSA_PRIVATE_EXPONENT, TEE_ATTR_RSA_PRIVATE_EXPONENT_VALUE01, sizeof(TEE_ATTR_RSA_PRIVATE_EXPONENT_VALUE01), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), OBJECT_HANDLE_02));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AllocateOperation(c, SESSION01, CMD_AllocateOperation, TEE_ALG_RSAES_PKCS1_OAEP_MGF1_SHA384, TEE_MODE_ENCRYPT, SIZE_RSA_KEYPAIR_2048, SIZE_ZERO, OPERATION_HANDLE_02));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_SetOperationKey(c, SESSION01, CMD_SetOperationKey, OPERATION_HANDLE_02, OBJECT_HANDLE_02));
-    ADBG_EXPECT(c, TEE_ERROR_TARGET_DEAD, Invoke_Crypto_AsymmetricDecrypt(c, SESSION01, CMD_AsymmetricDecrypt, OPERATION_HANDLE_02, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_NORMAL));
+    ADBG_EXPECT(c, TEE_ERROR_TARGET_DEAD, Invoke_Crypto_AsymmetricDecrypt(c, SESSION01, CMD_AsymmetricDecrypt, OPERATION_HANDLE_02, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_NORMAL, 0));
     TEEC_CloseSession(SESSION01);
     TEEC_FinalizeContext(CONTEXT01);
 
@@ -3570,7 +3574,7 @@
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_InitObjectWithKeys(c, SESSION01, CMD_InitObjectWithKeys, TEE_TYPE_RSA_KEYPAIR, SIZE_RSA_KEYPAIR_2048, TEE_ATTR_RSA_MODULUS, TEE_ATTR_RSA_MODULUS_VALUE01, sizeof(TEE_ATTR_RSA_MODULUS_VALUE01), TEE_ATTR_RSA_PUBLIC_EXPONENT, TEE_ATTR_RSA_PUBLIC_EXPONENT_VALUE01, sizeof(TEE_ATTR_RSA_PUBLIC_EXPONENT_VALUE01), TEE_ATTR_RSA_PRIVATE_EXPONENT, TEE_ATTR_RSA_PRIVATE_EXPONENT_VALUE01, sizeof(TEE_ATTR_RSA_PRIVATE_EXPONENT_VALUE01), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), OBJECT_HANDLE_01));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AllocateOperation(c, SESSION01, CMD_AllocateOperation, TEE_ALG_RSAES_PKCS1_OAEP_MGF1_SHA512, TEE_MODE_DECRYPT, SIZE_RSA_KEYPAIR_2048, SIZE_ZERO, OPERATION_HANDLE_02));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_SetOperationKey(c, SESSION01, CMD_SetOperationKey, OPERATION_HANDLE_02, OBJECT_HANDLE_01));
-    ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AsymmetricDecrypt(c, SESSION01, CMD_AsymmetricDecrypt, OPERATION_HANDLE_02, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_NORMAL));
+    ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AsymmetricDecrypt(c, SESSION01, CMD_AsymmetricDecrypt, OPERATION_HANDLE_02, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_NORMAL, 0));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_FreeAllKeysAndOperations(c, SESSION01, CMD_FreeAllKeysAndOperations, OPERATION_HANDLE_02));
     TEEC_CloseSession(SESSION01);
     TEEC_FinalizeContext(CONTEXT01);
@@ -3591,7 +3595,7 @@
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AsymmetricEncrypt(c, SESSION01, CMD_AsymmetricEncrypt, OPERATION_HANDLE_02, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_NORMAL));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_InitObjectWithKeys(c, SESSION01, CMD_InitObjectWithKeys, TEE_TYPE_RSA_KEYPAIR, SIZE_RSA_KEYPAIR_2048, TEE_ATTR_RSA_MODULUS, TEE_ATTR_RSA_MODULUS_VALUE01, sizeof(TEE_ATTR_RSA_MODULUS_VALUE01), TEE_ATTR_RSA_PUBLIC_EXPONENT, TEE_ATTR_RSA_PUBLIC_EXPONENT_VALUE01, sizeof(TEE_ATTR_RSA_PUBLIC_EXPONENT_VALUE01), TEE_ATTR_RSA_PRIVATE_EXPONENT, TEE_ATTR_RSA_PRIVATE_EXPONENT_VALUE01, sizeof(TEE_ATTR_RSA_PRIVATE_EXPONENT_VALUE01), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), OBJECT_HANDLE_01));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AllocateOperation(c, SESSION01, CMD_AllocateOperation, TEE_ALG_RSAES_PKCS1_OAEP_MGF1_SHA512, TEE_MODE_DECRYPT, SIZE_RSA_KEYPAIR_2048, SIZE_ZERO, OPERATION_HANDLE_01));
-    ADBG_EXPECT(c, TEE_ERROR_TARGET_DEAD, Invoke_Crypto_AsymmetricDecrypt(c, SESSION01, CMD_AsymmetricDecrypt, OPERATION_HANDLE_01, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_NORMAL));
+    ADBG_EXPECT(c, TEE_ERROR_TARGET_DEAD, Invoke_Crypto_AsymmetricDecrypt(c, SESSION01, CMD_AsymmetricDecrypt, OPERATION_HANDLE_01, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_NORMAL, 0));
     TEEC_CloseSession(SESSION01);
     TEEC_FinalizeContext(CONTEXT01);
 
@@ -3750,7 +3754,7 @@
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_InitObjectWithKeys(c, SESSION01, CMD_InitObjectWithKeys, TEE_TYPE_RSA_KEYPAIR, SIZE_RSA_KEYPAIR_2048, TEE_ATTR_RSA_MODULUS, TEE_ATTR_RSA_MODULUS_VALUE01, sizeof(TEE_ATTR_RSA_MODULUS_VALUE01), TEE_ATTR_RSA_PUBLIC_EXPONENT, TEE_ATTR_RSA_PUBLIC_EXPONENT_VALUE01, sizeof(TEE_ATTR_RSA_PUBLIC_EXPONENT_VALUE01), TEE_ATTR_RSA_PRIVATE_EXPONENT, TEE_ATTR_RSA_PRIVATE_EXPONENT_VALUE01, sizeof(TEE_ATTR_RSA_PRIVATE_EXPONENT_VALUE01), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), OBJECT_HANDLE_01));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AllocateOperation(c, SESSION01, CMD_AllocateOperation, TEE_ALG_RSAES_PKCS1_OAEP_MGF1_SHA1, TEE_MODE_DECRYPT, SIZE_RSA_KEYPAIR_2048, SIZE_ZERO, OPERATION_HANDLE_01));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_SetOperationKey(c, SESSION01, CMD_SetOperationKey, OPERATION_HANDLE_01, OBJECT_HANDLE_01));
-    ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AsymmetricDecrypt(c, SESSION01, CMD_AsymmetricDecrypt, OPERATION_HANDLE_01, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_NORMAL));
+    ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AsymmetricDecrypt(c, SESSION01, CMD_AsymmetricDecrypt, OPERATION_HANDLE_01, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_NORMAL, 0));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_FreeAllKeysAndOperations(c, SESSION01, CMD_FreeAllKeysAndOperations, OPERATION_HANDLE_01));
     TEEC_CloseSession(SESSION01);
     TEEC_FinalizeContext(CONTEXT01);
@@ -3772,7 +3776,7 @@
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_InitObjectWithKeys(c, SESSION01, CMD_InitObjectWithKeys, TEE_TYPE_RSA_KEYPAIR, SIZE_RSA_KEYPAIR_2048, TEE_ATTR_RSA_MODULUS, TEE_ATTR_RSA_MODULUS_VALUE01, sizeof(TEE_ATTR_RSA_MODULUS_VALUE01), TEE_ATTR_RSA_PUBLIC_EXPONENT, TEE_ATTR_RSA_PUBLIC_EXPONENT_VALUE01, sizeof(TEE_ATTR_RSA_PUBLIC_EXPONENT_VALUE01), TEE_ATTR_RSA_PRIVATE_EXPONENT, TEE_ATTR_RSA_PRIVATE_EXPONENT_VALUE01, sizeof(TEE_ATTR_RSA_PRIVATE_EXPONENT_VALUE01), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), OBJECT_HANDLE_01));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AllocateOperation(c, SESSION01, CMD_AllocateOperation, TEE_ALG_RSAES_PKCS1_V1_5, TEE_MODE_DECRYPT, SIZE_RSA_KEYPAIR_2048, SIZE_ZERO, OPERATION_HANDLE_01));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_SetOperationKey(c, SESSION01, CMD_SetOperationKey, OPERATION_HANDLE_01, OBJECT_HANDLE_01));
-    ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AsymmetricDecrypt(c, SESSION01, CMD_AsymmetricDecrypt, OPERATION_HANDLE_01, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_NORMAL));
+    ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AsymmetricDecrypt(c, SESSION01, CMD_AsymmetricDecrypt, OPERATION_HANDLE_01, DATA_FOR_CRYPTO1, LENGTH_DATA_FOR_CRYPTO1, OUTPUT_BUFFER_NORMAL, 0));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_FreeAllKeysAndOperations(c, SESSION01, CMD_FreeAllKeysAndOperations, OPERATION_HANDLE_01));
     TEEC_CloseSession(SESSION01);
     TEEC_FinalizeContext(CONTEXT01);
@@ -4611,7 +4615,9 @@
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_InitObjectWithKeys(c, SESSION01, CMD_InitObjectWithKeys, TEE_TYPE_AES, SIZE_AES_256, TEE_ATTR_SECRET_VALUE, TEE_ATTR_AES_256_VALUE01, sizeof(TEE_ATTR_AES_256_VALUE01), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), TEE_ATTR_NONE, TEE_ATTR_VALUE_NONE, sizeof(TEE_ATTR_VALUE_NONE), OBJECT_HANDLE_02));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AllocateOperation(c, SESSION01, CMD_AllocateOperation, TEE_ALG_AES_XTS, TEE_MODE_ENCRYPT, SIZE_AES_256, SIZE_AES_256, OPERATION_HANDLE_02));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_SetOperationKey2(c, SESSION01, CMD_SetOperationKey2, OPERATION_HANDLE_02, OBJECT_HANDLE_02, OBJECT_HANDLE_01));
+    ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_GetOperationInfoMultiple(c, SESSION01, CMD_GetOperationInfoMultiple, OPERATION_HANDLE_02, TEE_ALG_AES_XTS, TEE_OPERATION_CIPHER, TEE_MODE_ENCRYPT, SIZE_ZERO, SIZE_AES_256, SIZE_AES_256, SIZE_AES_256, TEE_USAGE_ENCRYPT, 2, true, true, false));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_AllocateOperation(c, SESSION01, CMD_AllocateOperation, TEE_ALG_AES_XTS, TEE_MODE_ENCRYPT, SIZE_AES_256, SIZE_AES_256, OPERATION_HANDLE_01));
+    ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_GetOperationInfoMultiple(c, SESSION01, CMD_GetOperationInfoMultiple, OPERATION_HANDLE_01, TEE_ALG_AES_XTS, TEE_OPERATION_CIPHER, TEE_MODE_ENCRYPT, SIZE_ZERO, SIZE_AES_256, SIZE_AES_256, SIZE_ZERO, TEE_USAGE_ENCRYPT, 2, true, false, false));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_CopyOperation(c, SESSION01, CMD_CopyOperation, OPERATION_HANDLE_01, OPERATION_HANDLE_02));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_CipherInit(c, SESSION01, CMD_CipherInit, OPERATION_HANDLE_01, IV2_VALUE_128bits_AES, IV2_LENGTH_128bits_AES));
     ADBG_EXPECT(c, TEE_SUCCESS, Invoke_Crypto_CipherUpdate(c, SESSION01, CMD_CipherUpdate, OPERATION_HANDLE_01, DATA_FOR_CRYPTO1_PART1, LENGTH_DATA_FOR_CRYPTO1_PART1, OUTPUT_BUFFER_NORMAL));
@@ -6873,4 +6879,4 @@
                  /* Requirement IDs */
                  "CIPHER_INIT_PANIC",
                  /* How to implement */
-                 "Description of how to implement ...");
\ No newline at end of file
+                 "Description of how to implement ...");
